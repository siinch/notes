select = projection
where = selection
from  cartesian product

l

1.1 Relational Model
-Structure of relational databases
    - tables(relation), columns(attributes), rows(tuples)
-Keys in relational databases
    - candidate(minimal), super, primary, foreign
-Fundamental operations in relational algebra
    - select(rows), project(columns), union, difference, product, rename
    - intersect, join, natural join
    - PROJECT name (SELECT name = simon (students))

1.2 Normalization
-Overall goal of normalization
    - good design -> avoid redundancy and nulls
    - decomposition
-Functional Dependency, superkey and candidate Keys
    - super and candidate keys
    - x -(determines)-> y, z
-Boyce-Codd Normalform
    - has one common superkey
    - make example of lossless decomposition

1.3 Entity-Relationship Model
-Basic concepts
    - Entity Sets: attributes, PK, FK
    - Relationship Sets: roles, n-ary, attributes
-ER-Diagram
    - Cardinality: one/many
    - Relation Schema
-Weak Entity Sets
    - Dependent on other entities

1.4 Join in SQL
-using the operator join in SQL
    - aka. inner join
    - select * from posts join users on posts.userid = users.userid;
-SQL-expressions with and without use of this operator
    - select * from posts, user where posts.userid = users.userid;
-Natural join and examples of other join-operations
    - select * from posts natural join user;
    - inner/outer left/right

1.5 Aggregate functions
-Built-in aggregate functions
    - returns 1 result
    - sum, count, min, max, avg
-Grouping
    - group by, order by
-Conditions that applies to groups
    - having

1.6 Nested subqueries
-Subqueries using IN and EXISTS
    - in (x is in (y, z, i, j k))
    - exists (is not empty)
-Subqueries using SOME and ALL
    - all (all match are true)
    - some (one or more is true)
-Subqueries in the From Clause
    - must be renamed with AS

1.7 SQL Functions and Procedures
-Purpose
    - Code reuse
    - Business logic security
-Declaration, invocation
    - create or replace function/procedures
    - in expression or "call"
-Language constructs
    - if statements, while loops, for in loops
    - commit/rollback

1.8 SQL Triggers
-Purpose
    - Integrity maintenance / data update
-Language constructs specific for triggers
    - after/before update of x on y
    - referencing old / new row
    - return/create trigger
-Use for integrity maintenance and data update
    - cascade

1.9 SQL indexing
-Indexing Purpose
    - speed up data retrieval
    - search key -> pointer
    - Evaluation matrix / cost benefit
-How to index a table in SQL
    - primary key
    - create index x on y(z)
-How to check whether defined index is used
    - pg_stat_user_indexes;

1.10 Information retrieval basics
-information retrieval purpose
    - searching, relevance to input (keywords)
-Precision/recall
    - documents relevance to query
    - number of relevant documents
    - difficult to quantify
-Inverted Index
    - Document, location, count, weights -> keyword

1.11 Relevance Ranking Using Terms
-Term frequency
  - frequency relative to total terms log(1 + n(d, t)/n(d))
-Document frequency
  - frequency of documents with term (1/)n(t)
-tf-idf weighting
    - multiply the two and sum

1.12 Word clouds
-Compare to weighted word list
-Problems related to visualization by word clouds
-Frequency-based vs relevance weighted word clouds

2.1 C# Delegates & Lambda
-Describe Delegates
-Explain Lambda
    - anonymous function x => x * x
-Examples of functional programming in C#

2.2 C# Linq & Object Relational Mapping
-Linq functions: selection, projection, join, grouping
-Describe object relational Mapping
-Entity Framework

2.3 Generics, interfaces & abstracts classes
-What is the purpose of generics?
-Parameter constraints
-How to use interfaces and abstract classes

2.4 Network
-OSI Model
-Protocols
-Routing/Switching

2.5 Network
-IP protocol and IP numbers
-TCP Connection establishment
-Application layer

2.6 HTTP
-Protocol stack when using HTTP
-Client/Server Model
-Request/Response

2.7 Web services
-What is REST?
-Interface design and Hypermedia
-Authentication

2.8 ASP.NET
-MVC Architecture
-Middleware
-REST services

2.9 Design patterns, Application Architecture & Testing
-Multilayer applications
-Testing - properties mocking, etc.
-Abstractions

3.1 Javascript and patterns
-Dynamic & untyped
-Objects, literals, module pattern and revealing module patterns
-Immediately-Invoked Function Expression

3.2 Asynchronous programming
-Callbacks
-Functions & closures
-Ajax (jQuery)

3.3 HTML & DOM
-Unobtrusive design
-DOM Element selection
-Single page applications

3.4 CSS3 & Bootstrap
-Cascading
-CSS Selectors
-Bootstrap grid system

3.5 Knockout & MVVM
-What is MVVM?
-Dependency tracking, declarative bindings, templating and the observable patterns
-Components

3.6 Responsive Web design
-Media queries
-mobile first principle
-Multi-device layout patterns
